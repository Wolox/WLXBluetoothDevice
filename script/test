#!/bin/bash

set -e

source script/.env

schemes ()
{
  xcodebuild -list | awk '{if(found) print} /Schemes/{found=1}' | awk '{$1=$1};1'
}

run_tests ()
{
  test_command="set -o pipefail && xcodebuild -scheme $1"
  if [ -z "$XCODE_WORKSPACE" ]
  then
    test_command="$test_command -project $XCODE_PROJECT"
  else
    test_command="$test_command -workspace $XCODE_WORKSPACE"
  fi
  test_command="$test_command -sdk iphonesimulator test -configuration Debug"
  if [ ! -z "$CIRCLE_ARTIFACTS" ]
  then
    test_command="$test_command | tee $CIRCLE_ARTIFACTS/xcode_raw.log"
  fi
  if type bundle > /dev/null && bundle show xcpretty > /dev/null
  then
    test_command="$test_command | bundle exec xcpretty -c"
    if [ ! -z "$CIRCLE_TEST_REPORTS" ]
    then
      test_command="$test_command --report junit --output $CIRCLE_TEST_REPORTS/xcode/results.xml"
    fi
  fi

  echo ""
  echo " → Running tests for scheme '$1'"
  echo ""
  eval $test_command
}

current_schemes=$(schemes)
if [ -z "$current_schemes" ]
then
  echo ""
  echo "ERROR: There are no schemes. Probably you forgot to share your schemes"
  exit 1
fi

for scheme in current_schemes
do
  run_tests $scheme
done

if [ -f "$PROJECT_NAME.podspec" ]
then
  echo ""
  echo " → Linting $PROJECT_NAME.podspec"
  echo ""
  if type bundle > /dev/null && bundle show pod > /dev/null
  then
    bundle exec pod lib lint
  elif type pod > /dev/null
  then
    pod lib lint
  fi
fi
